/**
 *
 计算 1 到 100 的和

 Node.js

 cmd 窗口的 快捷键：

 cd: 进入某个文件夹
 ls： 查看文件夹下面的所有文件
 */

// let : javascript 的关键字
// let 的作用？ 声明变量用的
// 关键字： 任何计算机语言都会有关键字，类似英语由英语单词构成
// sum : 变量
// = ： 赋值操作符（javascript当中的关系运算符 == 、>= 、<= 、>、<）
// 0 ： 常量
// 常量与变量：sum 是变量，sum 中还可以存储其他的值，0 永远不会变
// ; 每句话用分号隔开
// 声明一个变量  sum 并将 0 赋给它
// 计算机内存角度： 开辟一块计算机内存，命名为sum ，内存里面放着 0
// cpu\内存(rom)\外存(ram)   
// 看电影？ 硬盘与CPU 之间不直接进行数据交换（中间以内存为媒介）
// for : javascript 语言的关键字
// for : 建立循环
// for(){}  循环的结构
// let i = 1
// i <= 100 ： 当变量 i <= 100 的时候
// i++ : 自增运算符（++） 自减运算符（--），每次加1或者减一
// {} 里面放的是 循环体，每次循环都需要执行循环体内的代码
// sum += i <====> sum = sum + i (算数运算符+、-、*、/、%)
// 每次让 sum 的值加上 i ，然后将和重新赋给 sum
// 判断i是否是偶数
// if : javascript 的关键字
// if 作用？条件判断
// if(){} : ()内是条件判断
// () 条件时真的就会执行后面 {}里面的语句，反之就不执行
// i%2  除以2后得到的余数
// ==  等于

let sum = 0;
for (let i = 1; i <= 100; i++) {
    if (i % 2 == 0) {
        sum += i;
    }
}
console.log(sum)

// 运算符、关键字、对象、数组、函数、逻辑语句、数据类型
// 运算符：算数运算符、关系运算符、赋值运算符、逻辑运算符
// 算数运算符： +、 - 、*、 / 、%
// >、<、>=、<=、==、!=、===
// 数据类型：数值类型、字符串类型、Boolean类型、null、undefined 、对象
// 关键字： let、for、if
// 对象
// 数组
// 函数
// 逻辑语句：条件判断、循环

// 对象定义： 键值对的集合（属性和方法的集合）
// 键值对（键：name、age、speak 值：'zhangsan'、18、function(){}）
// 键与值之间用 : 连接 ，键值对之间用 , 连接
// 最后一个键值对不用加 ,
// 集合没有顺序
// 如何访问对象的属性？用 . + 属性名
// . 属性操作符
// 如何调用对象的方法 ： 对象.方法名()

let zhangsan = {
    name: 'zhangsan', //属性
    age: 18, //属性
    speak: function() {
            console.log('I am zhangsan')
        } //方法
}